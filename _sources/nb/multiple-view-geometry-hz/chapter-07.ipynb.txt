{
 "cells": [
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    "***************************************************\n",
    "Computation of the Camera Matrix :math:`\\mathtt{P}`\n",
    "***************************************************"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. _hartley2004-ex-7.i:\n",
    "\n",
    "(i)\n",
    "===\n",
    "\n",
    ":math:`\\mathtt{K}` provides the transformation between an image point and a ray\n",
    "in :math:`\\mathbb{R}^3`.  Once :math:`\\mathtt{K}` is known, the camera is termed\n",
    "calibrated.  A calibrated camera is a direction sensor, able to measure the\n",
    "direction of rays â€” like a 2D protractor (8.7).\n",
    "\n",
    "Suppose the camera matrix has zero skew:\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\mathtt{P}\n",
    "    &= \\mathtt{K} \\mathtt{R}\n",
    "       \\left[\n",
    "         \\begin{array}{c|c} \\mathtt{I} & -\\tilde{\\mathbf{C}} \\end{array}\n",
    "       \\right]\n",
    "       & \\quad & \\text{(6.11)}\\\\\n",
    "    &= \\begin{bmatrix}\n",
    "         \\alpha_x & s        & x_0\\\\\n",
    "                  & \\alpha_y & y_0\\\\\n",
    "                  &          & 1\n",
    "       \\end{bmatrix}\n",
    "       \\begin{bmatrix}\n",
    "         \\mathbf{r}_1^\\top & -\\mathbf{r}_1^\\top \\tilde{\\mathbf{C}}\\\\\n",
    "         \\mathbf{r}_2^\\top & -\\mathbf{r}_2^\\top \\tilde{\\mathbf{C}}\\\\\n",
    "         \\mathbf{r}_3^\\top & -\\mathbf{r}_3^\\top \\tilde{\\mathbf{C}}\n",
    "       \\end{bmatrix}\n",
    "       & \\quad & \\text{(6.9), (6.16)}\\\\\n",
    "    &= \\begin{bmatrix}\n",
    "         \\alpha_x \\mathbf{r}_1^\\top +\n",
    "             s \\mathbf{r}_2^\\top + x_0 \\mathbf{r}_3^\\top\n",
    "           & -\\alpha_x \\mathbf{r}_1^\\top \\tilde{\\mathbf{C}} -\n",
    "                 s \\mathbf{r}_2^\\top \\tilde{\\mathbf{C}} -\n",
    "                 x_0 \\mathbf{r}_3^\\top \\tilde{\\mathbf{C}}\\\\\n",
    "         \\alpha_y \\mathbf{r}_2^\\top + y_0 \\mathbf{r}_3^\\top\n",
    "           & -\\alpha_y \\mathbf{r}_2^\\top \\tilde{\\mathbf{C}} -\n",
    "                 y_0 \\mathbf{r}_3^\\top \\tilde{\\mathbf{C}}\\\\\n",
    "         \\mathbf{r}_3^\\top & -\\mathbf{r}_3^\\top \\tilde{\\mathbf{C}}\n",
    "       \\end{bmatrix}\\\\\n",
    "    &= \\begin{bmatrix}\n",
    "         \\alpha_x \\mathbf{r}_1^\\top + x_0 \\mathbf{r}_3^\\top\n",
    "           & -\\alpha_x \\mathbf{r}_1^\\top \\tilde{\\mathbf{C}} -\n",
    "                 x_0 \\mathbf{r}_3^\\top \\tilde{\\mathbf{C}}\\\\\n",
    "         \\alpha_y \\mathbf{r}_2^\\top + y_0 \\mathbf{r}_3^\\top\n",
    "           & -\\alpha_y \\mathbf{r}_2^\\top \\tilde{\\mathbf{C}} -\n",
    "                 y_0 \\mathbf{r}_3^\\top \\tilde{\\mathbf{C}}\\\\\n",
    "         \\mathbf{r}_3^\\top & -\\mathbf{r}_3^\\top \\tilde{\\mathbf{C}}\n",
    "       \\end{bmatrix}\n",
    "       & \\quad & s = 0.\n",
    "\n",
    "Recall that one notion of degrees of freedom is the number of free parameters\n",
    "minus the number of constraints.  The degrees of freedom of a fitting procedure\n",
    "describes the effective number of parameters used by this procedure, and hence\n",
    "provides a quantitative measure of estimator complexity :cite:`ryantibs2014dof`.\n",
    "\n",
    "Although :math:`\\mathtt{P}` has twelve free parameters, the use of homogeneous\n",
    "coordinates requires constraining\n",
    ":math:`\\left\\Vert \\mathtt{P} \\right\\Vert_F = 1` to obtain a unique solution.\n",
    "Hence there are eleven degrees of freedom, and that remains unchanged even when\n",
    "the skew is known because the entries of :math:`\\mathtt{P}` are still quadratic\n",
    "in the unknowns\n",
    ":math:`\\left\\{ \\mathtt{K}, \\mathtt{R}, \\tilde{\\mathbf{C}} \\right\\}`.\n",
    "\n",
    "As demonstrated in *Least-squares Minimization* (Appendix 5), the minimal\n",
    "solution requires 5.5 point correspondences.  The corresponding DLT\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\mathtt{A} \\mathbf{p} = \\boldsymbol{0}\n",
    "   \\qquad (7.2)\n",
    "\n",
    "has rank eleven due to the use of homogeneous coordinates.  What follows is one\n",
    "way to extract the intrinsic parameters :cite:`marmcits4402cc`.  Suppose the DLT\n",
    "estimates :math:`\\mathtt{P}` up to some unknown scale :math:`\\rho` such that\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\mathtt{P} =\n",
    "   \\begin{bmatrix} M & \\mathbf{c} \\end{bmatrix} =\n",
    "   \\rho^{-1} \\left[\n",
    "     \\begin{array}{c|c}\n",
    "       \\mathtt{K} \\mathtt{R} & -\\mathtt{K} \\mathtt{R} \\tilde{\\mathbf{C}}\n",
    "     \\end{array}\n",
    "   \\right].\n",
    "\n",
    "Observe that\n",
    "\n",
    ".. math::\n",
    "\n",
    "   B = M M^\\top\n",
    "    &= \\rho^{-2} \\mathtt{K} \\mathtt{R} \\mathtt{R}^\\top \\mathtt{K}^\\top\\\\\n",
    "    &= \\rho^{-2} \\mathtt{K} \\mathtt{K}^\\top\n",
    "       & \\quad & \\mathtt{R} \\in \\mathcal{SO}(3)\\\\\n",
    "    &= \\rho^{-2} \\begin{bmatrix}\n",
    "         \\alpha_x^2 + s^2 + x_0^2 & s \\alpha_y + x_0 y_0 & x_0\\\\\n",
    "         s \\alpha_y + x_0 y_0     & \\alpha_y^2 + y_0^2   & y_0\\\\\n",
    "         x_0                      & y_0                  & 1\n",
    "       \\end{bmatrix}.\n",
    "\n",
    "The first step is to normalize :math:`B` to cancel out :math:`\\rho^{-2}`.  Let\n",
    ":math:`\\tilde{B}` denote the normalized version of :math:`B`.  The intrinsic\n",
    "parameters can be extracted as follows:\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\rho &= \\pm \\sqrt{B_{33}} = \\pm \\left\\Vert \\mathbf{m}_3 \\right\\Vert_2^{-1}\\\\\n",
    "   \\begin{bmatrix} x_0\\\\ x_y\\\\ 1 \\end{bmatrix}\n",
    "    &= \\begin{bmatrix} \\tilde{B}_{13}\\\\ \\tilde{B}_{23}\\\\ 1 \\end{bmatrix}\n",
    "     = \\rho^2 M \\mathbf{m}_3\\\\\n",
    "   \\alpha_y &= \\sqrt{\\tilde{B}_{22} - y_0^2} & \\quad & \\alpha_y > 0\\\\\n",
    "   s &= \\frac{\\tilde{B}_{12} - x_0 y_0}{\\alpha_y}\\\\\n",
    "   \\alpha_x &= \\sqrt{\\tilde{B}_{11} - s^2 - x_0^2} & \\quad & \\alpha_x > 0.\n",
    "\n",
    "The extrinsic parameters can be calculated as\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\mathbf{r}_3 &= \\rho \\mathbf{m}_3\\\\\n",
    "   \\mathbf{r}_1 &= \\frac{\n",
    "                     \\mathbf{m}_2 \\times \\mathbf{m}_3\n",
    "                   }{\n",
    "                     \\left\\Vert \\mathbf{m}_2 \\times \\mathbf{m}_3 \\right\\Vert\n",
    "                   }\\\\\n",
    "   \\mathbf{r}_2 &= \\mathbf{r}_3 \\times \\mathbf{r}_1\\\\\n",
    "   \\tilde{\\mathbf{C}}\n",
    "    &= -M^{-1} \\mathbf{c}\n",
    "     = -\\mathtt{R}^\\top \\mathtt{K}^{-1} \\mathbf{c}.\n",
    "\n",
    "Solving for :math:`\\tilde{\\mathbf{C}}` without decomposing :math:`M` gives an\n",
    "unambiguous solution because :math:`\\rho` cancels out.  However, if :math:`M` is\n",
    "singular, then :math:`\\tilde{\\mathbf{C}} = \\mathbf{d}` where\n",
    ":math:`M \\mathbf{d} = \\boldsymbol{0}` because the camera centre is the right\n",
    "null vector of :math:`\\mathtt{P}`.  The foregoing illustrates that\n",
    ":math:`\\mathtt{R}` is the reason behind the four different solutions.\n",
    "\n",
    "Given the intrinsic matrix :math:`\\mathtt{K}`, the problem is reduced to\n",
    ":ref:`P3P <hartley2004-ex-7.ii>`.  :cite:`fischler1981random` describes a unique\n",
    "solution when the number of point correspondences is at least six.  However, it\n",
    "will fail when all of them are coplanar.  These are known as critical\n",
    "configurations: all 3D points including the camera centre must lie on a special\n",
    "twisted cubic space curve (the horopter) that wraps around a circular cylinder\n",
    "(the dangerous cylinder).  Notable degenerate cases of this geometry include:\n",
    "\n",
    "(i) all object points at infinity (camera translation not estimable);\n",
    "(#) the projection center is coplanar with any three of the four object points;\n",
    "(#) a 3D line and a circle in an orthogonal plane touching the line.\n",
    "\n",
    "The last case is particularly troublesome for pose from any three points, or\n",
    "from a square or rectangle of four coplanar points, when the camera is in the\n",
    "region directly above the points.\n",
    "\n",
    ":cite:`triggs1999camera` explores the accuracy and robustness of P4P and P5P\n",
    "with partially uncalibrated intrinsics.  The former assumes the focal length is\n",
    "the only unknown calibration parameter while the latter assumes neither the\n",
    "focal length nor the principal point.  The proposed approach separates the\n",
    "problem into DLT and multiresultant.  The results indicate one should not\n",
    "bother with P4P and P5P.  The accuracy is not as good as :math:`6+` points, and\n",
    "the robustness is not even close to RANSAC P3P."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. _hartley2004-ex-7.ii:\n",
    "\n",
    "(ii)\n",
    "====\n",
    "\n",
    ":cite:`haralick1994review` is an excellent introduction to Perspective-n-Point\n",
    "(PnP).  An instance of PnP where :math:`n = 3` has in general four solutions.\n",
    "See :cite:`haavardsholmpnp,parkls3tcr` for better illustrations."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    "(iii)\n",
    "=====\n",
    "\n",
    "What follows are linear algorithms for estimating the finite projective camera\n",
    ":math:`\\mathtt{P}` under different conditions.  Once :math:`\\mathtt{P}` is\n",
    "known, the intrinsics and extrinsics can be extracted using the\n",
    ":ref:`classical formulation <hartley2004-ex-7.i>`.\n",
    "\n",
    "(a)\n",
    "---\n",
    "\n",
    "Given the camera location :math:`\\tilde{\\mathbf{C}}`, the minimal\n",
    "solution needs to satisfy\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\newcommand{\\skew}[1]{\\left[#1\\right]_{\\times}}\n",
    "   \\boldsymbol{0}\n",
    "    &= \\skew{\\mathbf{x}_i} \\mathtt{P} \\mathbf{X}_i\\\\\n",
    "    &= \\skew{\\mathbf{x}_i}\n",
    "       \\mathtt{K}\n",
    "       \\begin{bmatrix}\n",
    "         1 & 0 & 0 & 0\\\\\n",
    "         0 & 1 & 0 & 0\\\\\n",
    "         0 & 0 & 1 & 0\n",
    "       \\end{bmatrix}\n",
    "       \\begin{bmatrix}\n",
    "         \\mathtt{R} & \\boldsymbol{0}\\\\\n",
    "         \\boldsymbol{0}^\\top & 1\n",
    "       \\end{bmatrix}\n",
    "       \\begin{bmatrix}\n",
    "         \\mathtt{I} & -\\tilde{\\mathbf{C}}\\\\\n",
    "         \\boldsymbol{0}^\\top & 1\n",
    "       \\end{bmatrix}\n",
    "       \\mathbf{X}_i\n",
    "       & \\quad & \\text{6.2.5}\\\\\n",
    "    &= \\skew{\\mathbf{x}_i}\n",
    "       \\mathtt{K}\n",
    "       \\begin{bmatrix}\n",
    "         \\mathtt{R} & \\boldsymbol{0}\n",
    "       \\end{bmatrix}\n",
    "       \\tilde{\\mathbf{X}}_i\n",
    "       & \\quad & \\tilde{\\mathbf{X}}_i =\n",
    "                 \\begin{bmatrix} \\tilde{\\mathbf{x}}_i\\\\ 1 \\end{bmatrix} =\n",
    "                 \\begin{bmatrix}\n",
    "                   \\mathtt{I} & -\\tilde{\\mathbf{C}}\\\\\n",
    "                   \\boldsymbol{0}^\\top & 1\n",
    "                 \\end{bmatrix} \\mathbf{X}_i\\\\\n",
    "    &= \\begin{bmatrix}\n",
    "         \\boldsymbol{0}^\\top & -w_i \\tilde{\\mathbf{x}}_i^\\top &\n",
    "           y_i \\tilde{\\mathbf{x}}_i^\\top\\\\\n",
    "         w_i \\tilde{\\mathbf{x}}_i^\\top & \\boldsymbol{0}^\\top &\n",
    "           -x_i \\tilde{\\mathbf{x}}_i^\\top\\\\\n",
    "         -y_i \\tilde{\\mathbf{x}}_i^\\top & x_i \\tilde{\\mathbf{x}}_i^\\top &\n",
    "           \\boldsymbol{0}^\\top\n",
    "       \\end{bmatrix}\n",
    "       \\begin{bmatrix}\n",
    "         \\mathbf{p}_1^\\top\\\\\n",
    "         \\mathbf{p}_2^\\top\\\\\n",
    "         \\mathbf{p}_3^\\top\n",
    "       \\end{bmatrix}\n",
    "       & \\quad & \\text{(7.2)}\n",
    "\n",
    "where :math:`\\mathbf{p}_i^\\top` is a 3-vector, the :math:`i\\text{-th}` row of\n",
    ":math:`\\mathtt{P}`.\n",
    "\n",
    "By inspection, the camera matrix :math:`\\mathtt{P}` has nine free parameters\n",
    "remaining.  Imposing :math:`\\left\\Vert \\mathtt{K} \\mathtt{R} \\right\\Vert_F = 1`\n",
    "yields a unique solution, and hence only four point correspondences are needed\n",
    "to constrain the eight degrees of freedom.\n",
    "\n",
    "(b)\n",
    "---\n",
    "\n",
    "Recall that :math:`\\mathbf{v} = \\det(M) \\mathbf{m}_3` is a vector in the\n",
    "direction of the principal axis, directed towards the front of the camera.\n",
    "\n",
    "Given the direction of the camera's principal ray :math:`\\mathbf{v}`, the\n",
    "minimal solution needs to satisfy\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\boldsymbol{0}\n",
    "    &= \\skew{\\mathbf{x}_i} \\mathtt{P} \\mathbf{X}_i\n",
    "       & \\quad & \\mathbf{X}_i =\n",
    "                 \\begin{bmatrix} \\tilde{\\mathbf{x}}_i\\\\ 1 \\end{bmatrix}\\\\\n",
    "    &= \\begin{bmatrix}\n",
    "         \\boldsymbol{0}^\\top & -w_i \\tilde{\\mathbf{X}}_i^\\top &\n",
    "           y_i \\tilde{\\mathbf{X}}_i^\\top\\\\\n",
    "         w_i \\tilde{\\mathbf{X}}_i^\\top & \\boldsymbol{0}^\\top &\n",
    "           -x_i \\tilde{\\mathbf{X}}_i^\\top\\\\\n",
    "         -y_i \\tilde{\\mathbf{X}}_i^\\top & x_i \\tilde{\\mathbf{X}}_i^\\top &\n",
    "           \\boldsymbol{0}^\\top\n",
    "       \\end{bmatrix}\n",
    "       \\begin{bmatrix}\n",
    "         \\mathbf{p}_1^\\top\\\\\n",
    "         \\mathbf{p}_2^\\top\\\\\n",
    "         \\mathbf{p}_3^\\top\n",
    "       \\end{bmatrix}\n",
    "       & \\quad & \\text{(7.2)}\\\\\n",
    "   \\begin{bmatrix}\n",
    "     -y_i \\tilde{\\mathbf{x}}_i^\\top \\mathbf{m}_3\\\\\n",
    "     x_i \\tilde{\\mathbf{x}}_i^\\top \\mathbf{m}_3\\\\\n",
    "     0\n",
    "   \\end{bmatrix}\n",
    "    &= \\begin{bmatrix}\n",
    "         \\boldsymbol{0}^\\top & -w_i \\tilde{\\mathbf{X}}_i^\\top & y_i\\\\\n",
    "         w_i \\tilde{\\mathbf{X}}_i^\\top & \\boldsymbol{0}^\\top & -x_i\\\\\n",
    "         -y_i \\tilde{\\mathbf{X}}_i^\\top & x_i \\tilde{\\mathbf{X}}_i^\\top & 0\n",
    "       \\end{bmatrix}\n",
    "       \\begin{bmatrix}\n",
    "         \\mathbf{p}_1^\\top\\\\\n",
    "         \\mathbf{p}_2^\\top\\\\\n",
    "         p_{34}\n",
    "       \\end{bmatrix}\n",
    "       & \\quad & \\mathbf{p}_3 =\n",
    "                 \\begin{bmatrix} \\mathbf{m}_3\\\\ p_{34} \\end{bmatrix}\n",
    "\n",
    "where :math:`\\mathbf{p}_i^\\top` is a 4-vector, the :math:`i\\text{-th}` row of\n",
    ":math:`\\mathtt{P}`.\n",
    "\n",
    "By inspection, :math:`\\mathtt{P}` has nine free parameters remaining, and the\n",
    "DLT is no longer a homogeneous system of linear equations.  A least squares\n",
    "approximate solution can be obtained when there are at least 4.5 point\n",
    "correspondences constraining the nine degrees of freedom.\n",
    "\n",
    "(c)\n",
    "---\n",
    "\n",
    "Given the camera location :math:`\\tilde{\\mathbf{C}}` and the direction of the\n",
    "camera's principal ray :math:`\\mathbf{v}`, the minimal solution needs to satisfy\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\boldsymbol{0}\n",
    "    &= \\skew{\\mathbf{x}_i}\n",
    "       \\begin{bmatrix}\n",
    "         \\mathtt{K} \\mathtt{R} & \\boldsymbol{0}\n",
    "       \\end{bmatrix}\n",
    "       \\tilde{\\mathbf{X}}_i\n",
    "       & \\quad & \\text{(a)}\\\\\n",
    "   \\begin{bmatrix}\n",
    "     -y_i \\tilde{\\mathbf{x}}_i^\\top \\mathbf{m}_3\\\\\n",
    "     x_i \\tilde{\\mathbf{x}}_i^\\top \\mathbf{m}_3\\\\\n",
    "     0\n",
    "   \\end{bmatrix}\n",
    "    &= \\begin{bmatrix}\n",
    "         \\boldsymbol{0}^\\top & -w_i \\tilde{\\mathbf{x}}_i^\\top\\\\\n",
    "         w_i \\tilde{\\mathbf{x}}_i^\\top & \\boldsymbol{0}^\\top\\\\\n",
    "         -y_i \\tilde{\\mathbf{x}}_i^\\top & x_i \\tilde{\\mathbf{x}}_i^\\top\n",
    "       \\end{bmatrix}\n",
    "       \\begin{bmatrix}\n",
    "         \\mathbf{p}_1^\\top\\\\\n",
    "         \\mathbf{p}_2^\\top\n",
    "       \\end{bmatrix}\n",
    "       & \\quad & \\text{(b).}\n",
    "\n",
    "By inspection, :math:`\\mathtt{P}` has six free parameters remaining, and the DLT\n",
    "is no longer a homogeneous system of linear equations.  A least squares\n",
    "approximate solution can be obtained when there are at least three point\n",
    "correspondences constraining the six degrees of freedom.\n",
    "\n",
    "(d)\n",
    "---\n",
    "\n",
    "Given the camera location :math:`\\tilde{\\mathbf{C}}` and orientation\n",
    ":math:`\\mathtt{R}`, the minimal solution needs to satisfy\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\boldsymbol{0}\n",
    "    &= \\skew{\\mathbf{x}_i}\n",
    "       \\mathtt{K}\n",
    "       \\tilde{\\mathbf{x}}_i\n",
    "       & \\quad & \\tilde{\\mathbf{x}}_i =\n",
    "                 \\begin{bmatrix}\n",
    "                   \\mathtt{R} & -\\mathtt{R} \\tilde{\\mathbf{C}}\n",
    "                 \\end{bmatrix} \\mathbf{X}_i\\\\\n",
    "    &= \\skew{\\mathbf{x}_i}\n",
    "       \\begin{bmatrix}\n",
    "         f m_x & s & m_x p_x\\\\\n",
    "         0 & f m_y & m_y p_y\\\\\n",
    "         0 & 0 & 1\n",
    "       \\end{bmatrix}\n",
    "       \\tilde{\\mathbf{x}}_i\n",
    "       & \\quad & \\text{(6.10)}\\\\\n",
    "    &= \\begin{bmatrix}\n",
    "         \\boldsymbol{0}^\\top & -w_i \\tilde{\\mathbf{x}}_i^\\top &\n",
    "           y_i \\tilde{\\mathbf{x}}_i^\\top\\\\\n",
    "         w_i \\tilde{\\mathbf{x}}_i^\\top & \\boldsymbol{0}^\\top &\n",
    "           -x_i \\tilde{\\mathbf{x}}_i^\\top\\\\\n",
    "         -y_i \\tilde{\\mathbf{x}}_i^\\top & x_i \\tilde{\\mathbf{x}}_i^\\top &\n",
    "           \\boldsymbol{0}^\\top\n",
    "       \\end{bmatrix}\n",
    "       \\begin{bmatrix}\n",
    "         \\mathbf{k}_1^\\top\\\\\n",
    "         \\mathbf{k}_2^\\top\\\\\n",
    "         \\mathbf{k}_3^\\top\n",
    "       \\end{bmatrix}\n",
    "       & \\quad & \\text{(4.3)}\\\\\n",
    "   \\begin{bmatrix}\n",
    "     -y_i \\tilde{z}_i\\\\\n",
    "     x_i \\tilde{z}_i^\\top\\\\\n",
    "     0\n",
    "   \\end{bmatrix}\n",
    "    &= \\begin{bmatrix}\n",
    "         \\boldsymbol{0}^\\top & -w_i \\tilde{y}_i & -w_i \\tilde{z}_i\\\\\n",
    "         w_i \\tilde{\\mathbf{x}}_i^\\top & 0 & 0\\\\\n",
    "         -y_i \\tilde{\\mathbf{x}}_i^\\top & x_i \\tilde{y}_i & x_i \\tilde{z}_i\n",
    "       \\end{bmatrix}\n",
    "       \\begin{bmatrix}\n",
    "         \\mathbf{k}_1^\\top\\\\\n",
    "         k_{22}\\\\\n",
    "         k_{23}\n",
    "       \\end{bmatrix}\n",
    "\n",
    "where :math:`\\mathbf{k}_i^\\top` is the :math:`i\\text{-th}` row of\n",
    ":math:`\\mathtt{K}`.\n",
    "\n",
    "By inspection, :math:`\\mathtt{P}` has five free parameters remaining, and the\n",
    "DLT is no longer a homogeneous system of linear equations.  A least squares\n",
    "approximate solution can be obtained when there are at least 2.5 point\n",
    "correspondences constraining the five degrees of freedom.\n",
    "\n",
    "Note that in terms of rank deficiency, the second and third row equations is\n",
    "more robust than the first and second row equations.\n",
    "\n",
    "(e)\n",
    "---\n",
    "\n",
    "Given the setup in (d) and some subset of the internal camera parameters, the\n",
    "minimal solution needs to satisfy\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\begin{bmatrix}\n",
    "     -y_i \\tilde{z}_i\\\\\n",
    "     x_i \\tilde{z}_i\\\\\n",
    "     0\n",
    "   \\end{bmatrix} =\n",
    "   \\begin{bmatrix}\n",
    "     -w_i \\tilde{y}_i \\alpha_y - w_i \\tilde{z}_i y_0\\\\\n",
    "     w_i \\tilde{x}_i \\alpha_x + w_i \\tilde{y}_i s + w_i \\tilde{z}_i x_0\\\\\n",
    "     -y_i \\tilde{x}_i \\alpha_x - y_i \\tilde{y}_i s - y_i \\tilde{z}_i x_0 +\n",
    "       x_i \\tilde{y}_i \\alpha_y + x_i \\tilde{z}_i y_0\n",
    "   \\end{bmatrix}\n",
    "   \\qquad \\text{(7.6)}.\n",
    "\n",
    "By inspection, :math:`\\mathtt{P}` has less than five free parameters remaining,\n",
    "and the DLT is no longer a homogeneous system of linear equations.  Suppose\n",
    "there are :math:`N` degrees of freedom.  A least squares approximate solution\n",
    "can be obtained when there are at least :math:`N / 2` point correspondences.\n",
    "The rest of the linear algorithm proceeds as in (d)."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "collapsed": false,
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    "(iv) Conflation of Focal Length and Position on Principal Axis\n",
    "==============================================================\n",
    "\n",
    "The finite projective camera is defined as\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\mathtt{P}_0\n",
    "    &= \\mathtt{K} \\mathtt{R} \\left[\n",
    "         \\begin{array}{c|c} \\mathtt{I} & -\\tilde{\\mathbf{C}} \\end{array}\n",
    "       \\right]\n",
    "       & \\quad & \\text{(6.16)}\\\\\n",
    "    &= \\begin{bmatrix}\n",
    "         f \\mathtt{I} & \\tilde{\\mathbf{x}}_0\\\\\n",
    "         \\boldsymbol{0}^\\top & 1\n",
    "       \\end{bmatrix}\n",
    "         \\begin{bmatrix}\n",
    "           \\mathbf{r}_1^\\top & -\\mathbf{r}_1^\\top \\tilde{\\mathbf{C}}\\\\\n",
    "           \\mathbf{r}_2^\\top & -\\mathbf{r}_2^\\top \\tilde{\\mathbf{C}}\\\\\n",
    "           \\mathbf{r}_3^\\top & -\\mathbf{r}_3^\\top \\tilde{\\mathbf{C}}\n",
    "         \\end{bmatrix}\n",
    "       & \\quad & s = 0 \\text{ and } \\alpha_x = \\alpha_y = f.\n",
    "\n",
    "Given a 3D point represented in homogeneous coordinate as\n",
    ":math:`\\mathbf{X} =\n",
    "\\begin{bmatrix} \\bar{\\mathbf{x}}^\\top & 1 \\end{bmatrix}^\\top`, the imaged\n",
    "position is at\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\mathtt{P}_0 \\mathbf{X} =\n",
    "   \\mathtt{K} \\begin{bmatrix} \\tilde{\\mathbf{x}}\\\\ \\delta \\end{bmatrix} =\n",
    "   \\begin{bmatrix}\n",
    "     f \\tilde{\\mathbf{x}} + \\delta \\tilde{\\mathbf{x}}_0\\\\\n",
    "     \\delta\n",
    "   \\end{bmatrix}\n",
    "   \\quad \\text{where} \\quad\n",
    "   \\tilde{\\mathbf{x}} =\n",
    "   \\begin{bmatrix}\n",
    "     \\mathbf{r}_1^\\top \\bar{\\mathbf{x}} - \\mathbf{r}_1^\\top \\tilde{\\mathbf{C}}\\\\\n",
    "     \\mathbf{r}_2^\\top \\bar{\\mathbf{x}} - \\mathbf{r}_2^\\top \\tilde{\\mathbf{C}}\n",
    "   \\end{bmatrix}\n",
    "   \\quad \\text{and} \\quad\n",
    "   \\delta =\n",
    "   \\mathbf{r}_3^\\top \\bar{\\mathbf{x}} - \\mathbf{r}_3^\\top \\tilde{\\mathbf{C}}.\n",
    "\n",
    "The imaged point after dehomogenizing is given by\n",
    ":math:`\\mathbf{x} = \\tilde{\\mathbf{x}}_0 + \\frac{f}{\\delta} \\tilde{\\mathbf{x}}`.\n",
    "\n",
    ":math:`\\Delta f`\n",
    "----------------\n",
    "\n",
    "The imaged position of :math:`\\mathbf{X}` after an increase in camera focal\n",
    "length is at\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\mathtt{P}_f \\mathbf{X} =\n",
    "   \\mathtt{K}_f \\begin{bmatrix} \\tilde{\\mathbf{x}}\\\\ \\delta \\end{bmatrix} =\n",
    "   \\begin{bmatrix}\n",
    "     (f + \\Delta f) \\tilde{\\mathbf{x}} + \\delta \\tilde{\\mathbf{x}}_0\\\\\n",
    "     \\delta\n",
    "   \\end{bmatrix}\n",
    "   \\quad \\text{where} \\quad\n",
    "   \\mathtt{K}_f =\n",
    "   \\begin{bmatrix}\n",
    "     (f + \\Delta f) \\mathtt{I} & \\tilde{\\mathbf{x}}_0\\\\\n",
    "     \\boldsymbol{0}^\\top & 1\n",
    "   \\end{bmatrix}.\n",
    "\n",
    "The imaged point after dehomogenizing is given by\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\mathbf{x}'\n",
    "    &= \\tilde{\\mathbf{x}}_0 + \\frac{f + \\Delta f}{\\delta} \\tilde{\\mathbf{x}}\\\\\n",
    "    &= \\mathbf{x} + \\frac{\\Delta f}{\\delta} \\tilde{\\mathbf{x}}\\\\\n",
    "    &= \\mathbf{x} + k^f \\left( \\mathbf{x} - \\tilde{\\mathbf{x}}_0 \\right)\n",
    "       & \\quad & k^f = \\frac{\\Delta f}{f}.\n",
    "\n",
    ":math:`\\Delta t_3`\n",
    "------------------\n",
    "\n",
    "The camera matrix after a displacement :math:`\\Delta t_3` backwards along the\n",
    "principal axis is given by\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\mathtt{P}_t =\n",
    "   \\mathtt{K}\n",
    "     \\begin{bmatrix}\n",
    "       \\mathbf{r}_1^\\top & -\\mathbf{r}_1^\\top \\tilde{\\mathbf{C}}\\\\\n",
    "       \\mathbf{r}_2^\\top & -\\mathbf{r}_2^\\top \\tilde{\\mathbf{C}}\\\\\n",
    "       \\mathbf{r}_3^\\top & d_t\n",
    "     \\end{bmatrix}\n",
    "   \\qquad \\text{(6.17)}\n",
    "\n",
    "where :math:`d_t = -\\mathbf{r}_3^\\top \\tilde{\\mathbf{C}} + \\Delta t_3`.  The\n",
    "image position is at\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\mathtt{P}_t \\mathbf{X} =\n",
    "   \\mathtt{K} \\begin{bmatrix} \\tilde{\\mathbf{x}}\\\\ \\delta_t \\end{bmatrix} =\n",
    "   \\begin{bmatrix}\n",
    "     f \\tilde{\\mathbf{x}} + \\delta_t \\tilde{\\mathbf{x}}_0\\\\\n",
    "     \\delta_t\n",
    "   \\end{bmatrix}\n",
    "   \\quad \\text{where} \\quad\n",
    "   \\tilde{\\mathbf{x}} =\n",
    "   \\begin{bmatrix}\n",
    "     \\mathbf{r}_1^\\top \\bar{\\mathbf{x}} - \\mathbf{r}_1^\\top \\tilde{\\mathbf{C}}\\\\\n",
    "     \\mathbf{r}_2^\\top \\bar{\\mathbf{x}} - \\mathbf{r}_2^\\top \\tilde{\\mathbf{C}}\n",
    "   \\end{bmatrix}\n",
    "   \\quad \\text{and} \\quad\n",
    "   \\delta_t = \\mathbf{r}_3^\\top \\bar{\\mathbf{x}} + d_t.\n",
    "\n",
    "The imaged point after dehomogenizing is given by\n",
    "\n",
    ".. math::\n",
    "\n",
    "   \\mathbf{x}'\n",
    "    &= \\tilde{\\mathbf{x}}_0 + \\frac{f}{\\delta_t} \\tilde{\\mathbf{x}}\\\\\n",
    "    &= \\mathbf{x} - \\frac{f}{\\delta} \\tilde{\\mathbf{x}} +\n",
    "       \\frac{f}{\\delta_t} \\tilde{\\mathbf{x}}\\\\\n",
    "    &= \\mathbf{x} +\n",
    "       \\left(\n",
    "         \\frac{f}{\\delta + \\Delta t_3} - \\frac{f}{\\delta}\n",
    "       \\right) \\tilde{\\mathbf{x}}\\\\\n",
    "    &= \\mathbf{x} -\n",
    "       \\frac{f \\Delta t_3}{\\delta (\\delta + \\Delta t_3)} \\tilde{\\mathbf{x}}\\\\\n",
    "    &= \\mathbf{x} + k^{t_3} \\left( \\mathbf{x} - \\tilde{\\mathbf{x}}_0 \\right)\n",
    "       & \\quad & k^{t_3} = -\\frac{\\Delta t_3}{\\delta + \\Delta t_3}.\n",
    "\n",
    "Since the imaged position of :math:`\\mathbf{X}` is given at depth :math:`d`,\n",
    "by (6.15), :math:`\\delta = d`."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    "(v) Pushbroom Camera Computation\n",
    "================================\n",
    "\n",
    ":cite:`gupta1997linear` describes how the LP camera can be computed using a DLT\n",
    "method with a minimum of seven points."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. rubric:: References\n",
    "\n",
    ".. bibliography:: chapter-07.bib"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "celltoolbar": "Raw Cell Format",
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
